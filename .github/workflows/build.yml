name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*'  # Triggers on tags like 'v1.0.0'
  pull_request:
    branches:
      - main

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [windows-latest, macos-13, macos-latest]
        os: [ubuntu-latest]
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade pip and install dependencies
        run: |
          pip install --upgrade pip
          pip install cibuildwheel pytest numpy setuptools twine

      - name: Install pybind11
        run: |
          pip install pybind11[global]

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.0
        with:
          output-dir: dist
        env:
          CIBW_BEFORE_ALL_LINUX: >
            apt-get update -y -qq &&
            apt-get install -y -qq \
            libboost-filesystem-dev \
            libboost-program-options-dev \
            libboost-serialization-dev \
            libboost-system-dev \
            libboost-test-dev \
            libeigen3-dev

          CIBW_BEFORE_ALL_MACOS: >
            brew update &&
            brew install eigen boost

          CIBW_BEFORE_ALL_WINDOWS: >
            choco install eigen boost

      # - name: Install Eigen and Boost on Linux
      #   if: runner.os == 'Linux'
      #   run: |
      #     sudo apt-get update -y -qq &&
      #     sudo apt-get install -y -qq \
      #     libboost-filesystem-dev \
      #     libboost-program-options-dev \
      #     libboost-serialization-dev \
      #     libboost-system-dev \
      #     libboost-test-dev \
      #     libeigen3-dev

      # - name: Install Eigen and Boost on macOS
      #   if: runner.os == 'macOS'
      #   run: |
      #     brew install eigen boost

      # - name: Install Eigen and Boost on Windows
      #   if: runner.os == 'Windows'
      #   uses: lukka/run-vcpkg@v11
      #   id: runvcpkg
      #   with:
      #       vcpkgGitCommitId: da4b78d35084ec4e9808aa02017028da03b8d2ab
      #       vcpkgTriplet: 'x64-windows'
      #       vcpkgArguments: 'boost-dynamic-bitset boost-filesystem boost-graph boost-odeint boost-program-options boost-serialization boost-system boost-test eigen3'

      # - name: Build wheels
      #   run: |
      #     cibuildwheel --output-dir dist

      # - name: Install package from source
      #   run: |
      #     pip install .

      # - name: Run tests
      #   run: |
      #     cd tests
      #     python3 -m pytest test.py
      #     cd ..

      # - name: Upload built wheels as artifacts (Optional)
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: built-wheels
      #     path: dist/

      - name: Upload wheels to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Verify the built wheels before uploading
          twine check dist/*.whl

          # Upload the wheels to PyPI
          twine upload dist/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}